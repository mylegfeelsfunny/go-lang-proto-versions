// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: subdomain_types_v2.proto

package subdomainsv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubdomainToPayForSubscription int32

const (
	SubdomainToPayForSubscription_SUBDOMAIN_UNSPECIFIED                                         SubdomainToPayForSubscription = 0
	SubdomainToPayForSubscription_SUBDOMAIN_NOT_APPLICABLE                                      SubdomainToPayForSubscription = 1
	SubdomainToPayForSubscription_SUBDOMAIN_CANNOT_PAY_FOR_SUBSCRIPTION                         SubdomainToPayForSubscription = 2
	SubdomainToPayForSubscription_SUBDOMAIN_CAN_PAY_FOR_SUBSCRIPTION_ONLY_FROM_INTERNAL_FUNDING SubdomainToPayForSubscription = 3
	SubdomainToPayForSubscription_SUBDOMAIN_CAN_PAY_FOR_SUBSCRIPTION_FROM_EXTERNAL_FUNDING      SubdomainToPayForSubscription = 4
	SubdomainToPayForSubscription_SUBDOMAIN_PAID_FOR_SUBSCRIPTION                               SubdomainToPayForSubscription = 5
)

// Enum value maps for SubdomainToPayForSubscription.
var (
	SubdomainToPayForSubscription_name = map[int32]string{
		0: "SUBDOMAIN_UNSPECIFIED",
		1: "SUBDOMAIN_NOT_APPLICABLE",
		2: "SUBDOMAIN_CANNOT_PAY_FOR_SUBSCRIPTION",
		3: "SUBDOMAIN_CAN_PAY_FOR_SUBSCRIPTION_ONLY_FROM_INTERNAL_FUNDING",
		4: "SUBDOMAIN_CAN_PAY_FOR_SUBSCRIPTION_FROM_EXTERNAL_FUNDING",
		5: "SUBDOMAIN_PAID_FOR_SUBSCRIPTION",
	}
	SubdomainToPayForSubscription_value = map[string]int32{
		"SUBDOMAIN_UNSPECIFIED":                                         0,
		"SUBDOMAIN_NOT_APPLICABLE":                                      1,
		"SUBDOMAIN_CANNOT_PAY_FOR_SUBSCRIPTION":                         2,
		"SUBDOMAIN_CAN_PAY_FOR_SUBSCRIPTION_ONLY_FROM_INTERNAL_FUNDING": 3,
		"SUBDOMAIN_CAN_PAY_FOR_SUBSCRIPTION_FROM_EXTERNAL_FUNDING":      4,
		"SUBDOMAIN_PAID_FOR_SUBSCRIPTION":                               5,
	}
)

func (x SubdomainToPayForSubscription) Enum() *SubdomainToPayForSubscription {
	p := new(SubdomainToPayForSubscription)
	*p = x
	return p
}

func (x SubdomainToPayForSubscription) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubdomainToPayForSubscription) Descriptor() protoreflect.EnumDescriptor {
	return file_subdomain_types_v2_proto_enumTypes[0].Descriptor()
}

func (SubdomainToPayForSubscription) Type() protoreflect.EnumType {
	return &file_subdomain_types_v2_proto_enumTypes[0]
}

func (x SubdomainToPayForSubscription) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubdomainToPayForSubscription.Descriptor instead.
func (SubdomainToPayForSubscription) EnumDescriptor() ([]byte, []int) {
	return file_subdomain_types_v2_proto_rawDescGZIP(), []int{0}
}

type GetSubdomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: validate:"required,uuid4"
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetSubdomainRequest) Reset() {
	*x = GetSubdomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdomain_types_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubdomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubdomainRequest) ProtoMessage() {}

func (x *GetSubdomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subdomain_types_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubdomainRequest.ProtoReflect.Descriptor instead.
func (*GetSubdomainRequest) Descriptor() ([]byte, []int) {
	return file_subdomain_types_v2_proto_rawDescGZIP(), []int{0}
}

func (x *GetSubdomainRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetSubdomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: validate:"required"
	BreakingChange string `protobuf:"bytes,1,opt,name=breaking_change,json=breakingChange,proto3" json:"breaking_change,omitempty"`
}

func (x *GetSubdomainResponse) Reset() {
	*x = GetSubdomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdomain_types_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubdomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubdomainResponse) ProtoMessage() {}

func (x *GetSubdomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subdomain_types_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubdomainResponse.ProtoReflect.Descriptor instead.
func (*GetSubdomainResponse) Descriptor() ([]byte, []int) {
	return file_subdomain_types_v2_proto_rawDescGZIP(), []int{1}
}

func (x *GetSubdomainResponse) GetBreakingChange() string {
	if x != nil {
		return x.BreakingChange
	}
	return ""
}

type Subdomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubdomainToPayForSubscription SubdomainToPayForSubscription `protobuf:"varint,1,opt,name=subdomainToPayForSubscription,proto3,enum=subdomains.v2.SubdomainToPayForSubscription" json:"subdomainToPayForSubscription,omitempty"`
}

func (x *Subdomain) Reset() {
	*x = Subdomain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subdomain_types_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subdomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subdomain) ProtoMessage() {}

func (x *Subdomain) ProtoReflect() protoreflect.Message {
	mi := &file_subdomain_types_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subdomain.ProtoReflect.Descriptor instead.
func (*Subdomain) Descriptor() ([]byte, []int) {
	return file_subdomain_types_v2_proto_rawDescGZIP(), []int{2}
}

func (x *Subdomain) GetSubdomainToPayForSubscription() SubdomainToPayForSubscription {
	if x != nil {
		return x.SubdomainToPayForSubscription
	}
	return SubdomainToPayForSubscription_SUBDOMAIN_UNSPECIFIED
}

var File_subdomain_types_v2_proto protoreflect.FileDescriptor

var file_subdomain_types_v2_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x5f, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x75, 0x62, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x32, 0x22, 0x2d, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x65, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x7f, 0x0a, 0x09, 0x53, 0x75, 0x62,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x72, 0x0a, 0x1d, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x54, 0x6f, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e,
	0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75,
	0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1d, 0x73, 0x75, 0x62,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0xa9, 0x02, 0x0a, 0x1d, 0x53,
	0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x50, 0x61, 0x79, 0x46, 0x6f, 0x72,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15,
	0x53, 0x55, 0x42, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x55, 0x42, 0x44, 0x4f,
	0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x53, 0x55, 0x42, 0x44, 0x4f, 0x4d, 0x41,
	0x49, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x46, 0x4f,
	0x52, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x41, 0x0a, 0x3d, 0x53, 0x55, 0x42, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x43, 0x41,
	0x4e, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52,
	0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x46, 0x52, 0x4f, 0x4d,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x12, 0x3c, 0x0a, 0x38, 0x53, 0x55, 0x42, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e,
	0x5f, 0x43, 0x41, 0x4e, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x53, 0x55, 0x42,
	0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x45,
	0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x04, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x55, 0x42, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x50,
	0x41, 0x49, 0x44, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x42, 0xc5, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x32, 0x42, 0x15, 0x53, 0x75,
	0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x56, 0x32, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x78, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x3b, 0x73,
	0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x53, 0x58,
	0x58, 0xaa, 0x02, 0x0d, 0x53, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x56,
	0x32, 0xca, 0x02, 0x0d, 0x53, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x5c, 0x56,
	0x32, 0xe2, 0x02, 0x19, 0x53, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x5c, 0x56,
	0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e,
	0x53, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_subdomain_types_v2_proto_rawDescOnce sync.Once
	file_subdomain_types_v2_proto_rawDescData = file_subdomain_types_v2_proto_rawDesc
)

func file_subdomain_types_v2_proto_rawDescGZIP() []byte {
	file_subdomain_types_v2_proto_rawDescOnce.Do(func() {
		file_subdomain_types_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_subdomain_types_v2_proto_rawDescData)
	})
	return file_subdomain_types_v2_proto_rawDescData
}

var file_subdomain_types_v2_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_subdomain_types_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_subdomain_types_v2_proto_goTypes = []interface{}{
	(SubdomainToPayForSubscription)(0), // 0: subdomains.v2.SubdomainToPayForSubscription
	(*GetSubdomainRequest)(nil),        // 1: subdomains.v2.GetSubdomainRequest
	(*GetSubdomainResponse)(nil),       // 2: subdomains.v2.GetSubdomainResponse
	(*Subdomain)(nil),                  // 3: subdomains.v2.Subdomain
}
var file_subdomain_types_v2_proto_depIdxs = []int32{
	0, // 0: subdomains.v2.Subdomain.subdomainToPayForSubscription:type_name -> subdomains.v2.SubdomainToPayForSubscription
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_subdomain_types_v2_proto_init() }
func file_subdomain_types_v2_proto_init() {
	if File_subdomain_types_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_subdomain_types_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubdomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdomain_types_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubdomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subdomain_types_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subdomain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_subdomain_types_v2_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_subdomain_types_v2_proto_goTypes,
		DependencyIndexes: file_subdomain_types_v2_proto_depIdxs,
		EnumInfos:         file_subdomain_types_v2_proto_enumTypes,
		MessageInfos:      file_subdomain_types_v2_proto_msgTypes,
	}.Build()
	File_subdomain_types_v2_proto = out.File
	file_subdomain_types_v2_proto_rawDesc = nil
	file_subdomain_types_v2_proto_goTypes = nil
	file_subdomain_types_v2_proto_depIdxs = nil
}
